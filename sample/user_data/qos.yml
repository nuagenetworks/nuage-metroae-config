# Commenting out enterprise creates everything off of csproot
#
# - group: Enterprise
#   values:
#     enterprise_name: enterprise1
#     description: QoS Demonstration
#   children:

    - template: RateLimiter
      values:
        - rate_limiter_name: rate1
          committed_information_rate: 1000
          peak_information_rate: 1000
          peak_burst_size: 1000

        - rate_limiter_name: rate2
          committed_information_rate: 200
          peak_information_rate: 200
          peak_burst_size: 200

    - template: CosRemarkingPolicy
      values:
        - cos_remarking_policy_name: cos1
          forwarding_classes: ['A', 'B']
          remarking_cos_list: ['0', '1']

    - template: DscpRemarkingPolicy
      values:
        - dscp_remarking_policy_name: dscp1
          forwarding_classes: ['A', 'B']
          remarking_dscp_list: ['2', '3']

    - template: IngressQosPolicy
      values:
        - ingress_qos_policy_name: ingress-qos1
          parent_rate_limiter_name: rate1
          priority_queue_1_classes: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
          priority_queue_1_rate_limiter_name: rate2

        - ingress_qos_policy_name: ingress-qos2
          parent_rate_limiter_name: rate1
          wrr_queue_2_classes: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
          wrr_queue_2_rate_limiter_name: rate2

        - ingress_qos_policy_name: ingress-qos3
          parent_rate_limiter_name: rate1
          wrr_queue_2_classes: ['A', 'C', 'E', 'G']
          wrr_queue_2_rate_limiter_name: rate2
          wrr_queue_4_classes: ['B', 'D', 'F', 'H']
          wrr_queue_4_rate_limiter_name: rate2

    - template: EgressQosPolicy
      values:
        - egress_qos_policy_name: egress-qos1
          parent_rate_limiter_name: rate1
          priority_queue_1_classes: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
          priority_queue_1_rate_limiter_name: rate2

        - egress_qos_policy_name: egress-qos2
          parent_rate_limiter_name: rate1
          wrr_queue_2_classes: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
          wrr_queue_2_rate_limiter_name: rate2
          default_service_class: A
          cos_remarking_policy_name: cos1
          dscp_remarking_policy_name: dscp1

        - egress_qos_policy_name: egress-qos3
          parent_rate_limiter_name: rate1
          wrr_queue_2_classes: ['A', 'C', 'E', 'G']
          wrr_queue_2_rate_limiter_name: rate2
          wrr_queue_4_classes: ['B', 'D', 'F', 'H']
          wrr_queue_4_rate_limiter_name: rate2
          default_service_class: B

    - template: SymmetricQosPolicy
      values:
        - symmetric_qos_policy_name: sym-qos1
          parent_committed_information_rate: 1000
          parent_peak_information_rate: 1000
          parent_peak_burst_size: 1000
          wrr_queue_2_classes: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
          wrr_queue_2_committed_information_rate: 200
          wrr_queue_2_peak_information_rate: 200
          wrr_queue_2_peak_burst_size: 200
          default_service_class: A
          cos_remarking_classes: ['A', 'H']
          cos_remarking_cos_list: ['0', '7']
          dscp_remarking_classes: ['B', 'G']
          dscp_remarking_dscp_list: ['1', '6']

    # Another way to provide a symmetric QoS policy, sharing most data
    #
    # - group: AlternateSymmetricQosPolicy
    #   values:
    #     - parent_rate_limiter_name: rate1
    #       wrr_queue_2_classes: ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H']
    #       wrr_queue_2_rate_limiter_name: rate2
    #       default_service_class: A
    #       cos_remarking_policy_name: cos1
    #       dscp_remarking_policy_name: dscp1
    #   children:

    #     - template: IngressQosPolicy
    #       values:
    #         - ingress_qos_policy_name: alt-sym-qos2

    #     - template: EgressQosPolicy
    #       values:
    #         - egress_qos_policy_name: alt-sym-qos2
